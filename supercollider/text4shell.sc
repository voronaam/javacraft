(
SynthDef(\class, {
	arg atk=2, sus=0, rel=4, c1=1, c2=(-1),
	freq=500, detune=0.2, pan=0, cfhzmin=0.1, cfhzmax=0.3, lsf=200, ldb=0,
	cfmin=500, cfmax=2000, rqmin=0.1, rqmax=0.2, amp=1, out=0;
	var sig, env;
	env = EnvGen.kr(Env.new([0,1,1,0],[atk,sus,rel],[c1,0,c2]), doneAction:2);
	sig = Saw.ar(freq * {LFNoise1.kr(0.5,detune).midiratio}!2);
	sig = BPF.ar(
		sig,
		{LFNoise1.kr(LFNoise1.kr(4).exprange(cfhzmin,cfhzmax)).exprange(cfmin,cfmax)}!2,
		{LFNoise1.kr(0.2).exprange(rqmin,rqmax)}!2
	);
	sig = BLowShelf.ar(sig, lsf, 0.5, ldb);
	sig = sig * env * amp;
	sig = Balance2.ar(sig[0], sig[1], pan);
	Out.ar(out, sig);
}).add;
)

(
~class = {
	arg size, lines, complexity;
	Synth(\class, [
			\freq, 10*complexity+10,
		    \atk, 1+(size/5),
		    \rel, 1+(lines/5),
			\amp, 0.5,
			\cfmin, 50*2,
			\cfmax, 50*50,
			\rqmin, 0.01,
			\rqmax, 0.05,
		]);
	1.wait;
};
)

(
~r = Routine.new({

	"org.apache.commons:commons-text:1.9".postln;

"org/apache/commons/text/AlphabetConverter::<init> (size: 12, lines: 5, complexity: 1)".postln;
~class.(12, 5, 1);
"org/apache/commons/text/AlphabetConverter::encode (size: 58, lines: 25, complexity: 6)".postln;
~class.(58, 25, 6);
"org/apache/commons/text/AlphabetConverter::decode (size: 101, lines: 32, complexity: 9)".postln;
~class.(101, 32, 9);
"org/apache/commons/text/AlphabetConverter::addSingleEncoding (size: 109, lines: 42, complexity: 10)".postln;
~class.(109, 42, 10);
"org/apache/commons/text/AlphabetConverter::toString (size: 42, lines: 9, complexity: 2)".postln;
~class.(42, 9, 2);
"org/apache/commons/text/AlphabetConverter::equals (size: 40, lines: 10, complexity: 10)".postln;
~class.(40, 10, 10);
"org/apache/commons/text/AlphabetConverter::createConverterFromMap (size: 60, lines: 16, complexity: 3)".postln;
~class.(60, 16, 3);
"org/apache/commons/text/AlphabetConverter::convertCharsToIntegers (size: 27, lines: 7, complexity: 4)".postln;
~class.(27, 7, 4);
"org/apache/commons/text/AlphabetConverter::createConverter (size: 268, lines: 93, complexity: 14)".postln;
~class.(268, 93, 14);
"org/apache/commons/text/AlphabetConverter::codePointToString (size: 14, lines: 3, complexity: 3)".postln;
~class.(14, 3, 3);
"org/apache/commons/text/CaseUtils::<init> (size: 3, lines: 1, complexity: 1)".postln;
~class.(3, 1, 1);
"org/apache/commons/text/CaseUtils::toCamelCase (size: 96, lines: 31, complexity: 12)".postln;
~class.(96, 31, 12);
"org/apache/commons/text/CaseUtils::generateDelimiterSet (size: 40, lines: 9, complexity: 4)".postln;
~class.(40, 9, 4);
"org/apache/commons/text/CompositeFormat::<init> (size: 9, lines: 3, complexity: 1)".postln;
~class.(9, 3, 1);
"org/apache/commons/text/ExtendedMessageFormat::<init> (size: 6, lines: 1, complexity: 1)".postln;
~class.(6, 1, 1);
"org/apache/commons/text/ExtendedMessageFormat::<init> (size: 6, lines: 1, complexity: 1)".postln;
~class.(6, 1, 1);
"org/apache/commons/text/ExtendedMessageFormat::<init> (size: 7, lines: 1, complexity: 1)".postln;
~class.(7, 1, 1);
"org/apache/commons/text/ExtendedMessageFormat::<init> (size: 13, lines: 4, complexity: 1)".postln;
~class.(13, 4, 1);
"org/apache/commons/text/ExtendedMessageFormat::applyPattern (size: 210, lines: 67, complexity: 18)".postln;
~class.(210, 67, 18);
"org/apache/commons/text/ExtendedMessageFormat::equals (size: 40, lines: 16, complexity: 11)".postln;
~class.(40, 16, 11);
"org/apache/commons/text/ExtendedMessageFormat::hashCode (size: 21, lines: 3, complexity: 1)".postln;
~class.(21, 3, 1);
"org/apache/commons/text/ExtendedMessageFormat::getFormat (size: 45, lines: 13, complexity: 5)".postln;
~class.(45, 13, 5);
"org/apache/commons/text/ExtendedMessageFormat::readArgumentIndex (size: 110, lines: 30, complexity: 13)".postln;
~class.(110, 30, 13);
"org/apache/commons/text/ExtendedMessageFormat::parseFormatDescription (size: 64, lines: 25, complexity: 7)".postln;
~class.(64, 25, 7);
"org/apache/commons/text/ExtendedMessageFormat::insertFormats (size: 85, lines: 33, complexity: 9)".postln;
~class.(85, 33, 9);
"org/apache/commons/text/ExtendedMessageFormat::seekNonWs (size: 30, lines: 6, complexity: 3)".postln;
~class.(30, 6, 3);
"org/apache/commons/text/ExtendedMessageFormat::next (size: 8, lines: 1, complexity: 1)".postln;
~class.(8, 1, 1);
"org/apache/commons/text/ExtendedMessageFormat::appendQuotedString (size: 79, lines: 22, complexity: 9)".postln;
~class.(79, 22, 9);
"org/apache/commons/text/ExtendedMessageFormat::getQuotedString (size: 7, lines: 1, complexity: 1)".postln;
~class.(7, 1, 1);
"org/apache/commons/text/ExtendedMessageFormat::containsElements (size: 27, lines: 8, complexity: 7)".postln;
~class.(27, 8, 7);
"org/apache/commons/text/FormattableUtils::<init> (size: 3, lines: 1, complexity: 1)".postln;
~class.(3, 1, 1);
"org/apache/commons/text/FormattableUtils::append (size: 94, lines: 21, complexity: 11)".postln;
~class.(94, 21, 11);
"org/apache/commons/text/RandomStringGenerator$Builder::<init> (size: 9, lines: 26, complexity: 1)".postln;
~class.(9, 26, 1);
"org/apache/commons/text/RandomStringGenerator$Builder::withinRange (size: 47, lines: 8, complexity: 4)".postln;
~class.(47, 8, 4);
"org/apache/commons/text/RandomStringGenerator$Builder::withinRange (size: 77, lines: 13, complexity: 5)".postln;
~class.(77, 13, 5);
"org/apache/commons/text/RandomStringGenerator$Builder::filteredBy (size: 28, lines: 13, complexity: 4)".postln;
~class.(28, 13, 4);
"org/apache/commons/text/RandomStringGenerator$Builder::usingRandom (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/RandomStringGenerator$Builder::selectFrom (size: 30, lines: 4, complexity: 2)".postln;
~class.(30, 4, 2);
"org/apache/commons/text/RandomStringGenerator::<init> (size: 18, lines: 6, complexity: 1)".postln;
~class.(18, 6, 1);
"org/apache/commons/text/RandomStringGenerator::generateRandomNumber (size: 22, lines: 3, complexity: 3)".postln;
~class.(22, 3, 3);
"org/apache/commons/text/RandomStringGenerator::generateRandomNumber (size: 30, lines: 4, complexity: 3)".postln;
~class.(30, 4, 3);
"org/apache/commons/text/RandomStringGenerator::generate (size: 92, lines: 41, complexity: 14)".postln;
~class.(92, 41, 14);
"org/apache/commons/text/RandomStringGenerator::generate (size: 36, lines: 3, complexity: 3)".postln;
~class.(36, 3, 3);
"org/apache/commons/text/StrBuilder$StrBuilderReader::<init> (size: 6, lines: 2, complexity: 1)".postln;
~class.(6, 2, 1);
"org/apache/commons/text/StrBuilder$StrBuilderReader::read (size: 16, lines: 3, complexity: 3)".postln;
~class.(16, 3, 3);
"org/apache/commons/text/StrBuilder$StrBuilderReader::read (size: 68, lines: 15, complexity: 12)".postln;
~class.(68, 15, 12);
"org/apache/commons/text/StrBuilder$StrBuilderReader::skip (size: 35, lines: 7, complexity: 4)".postln;
~class.(35, 7, 4);
"org/apache/commons/text/StrBuilder$StrBuilderReader::mark (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/StrBuilder$StrBuilderReader::reset (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/StrBuilder$StrBuilderTokenizer::<init> (size: 6, lines: 2, complexity: 1)".postln;
~class.(6, 2, 1);
"org/apache/commons/text/StrBuilder$StrBuilderTokenizer::tokenize (size: 18, lines: 4, complexity: 3)".postln;
~class.(18, 4, 3);
"org/apache/commons/text/StrBuilder$StrBuilderTokenizer::getContent (size: 11, lines: 4, complexity: 3)".postln;
~class.(11, 4, 3);
"org/apache/commons/text/StrBuilder$StrBuilderWriter::<init> (size: 6, lines: 2, complexity: 1)".postln;
~class.(6, 2, 1);
"org/apache/commons/text/StrBuilder$StrBuilderWriter::write (size: 7, lines: 1, complexity: 1)".postln;
~class.(7, 1, 1);
"org/apache/commons/text/StrBuilder$StrBuilderWriter::write (size: 6, lines: 1, complexity: 1)".postln;
~class.(6, 1, 1);
"org/apache/commons/text/StrBuilder$StrBuilderWriter::write (size: 8, lines: 1, complexity: 1)".postln;
~class.(8, 1, 1);
"org/apache/commons/text/StrBuilder$StrBuilderWriter::write (size: 6, lines: 1, complexity: 1)".postln;
~class.(6, 1, 1);
"org/apache/commons/text/StrBuilder$StrBuilderWriter::write (size: 8, lines: 1, complexity: 1)".postln;
~class.(8, 1, 1);
"org/apache/commons/text/StrBuilder::<init> (size: 4, lines: 1, complexity: 1)".postln;
~class.(4, 1, 1);
"org/apache/commons/text/StrBuilder::<init> (size: 11, lines: 5, complexity: 2)".postln;
~class.(11, 5, 2);
"org/apache/commons/text/StrBuilder::<init> (size: 21, lines: 7, complexity: 2)".postln;
~class.(21, 7, 2);
"org/apache/commons/text/StrBuilder::setNewLineText (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/StrBuilder::setNullText (size: 12, lines: 4, complexity: 3)".postln;
~class.(12, 4, 3);
"org/apache/commons/text/StrBuilder::setLength (size: 45, lines: 14, complexity: 6)".postln;
~class.(45, 14, 6);
"org/apache/commons/text/StrBuilder::ensureCapacity (size: 24, lines: 5, complexity: 2)".postln;
~class.(24, 5, 2);
"org/apache/commons/text/StrBuilder::minimizeCapacity (size: 24, lines: 5, complexity: 2)".postln;
~class.(24, 5, 2);
"org/apache/commons/text/StrBuilder::clear (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/StrBuilder::charAt (size: 16, lines: 3, complexity: 4)".postln;
~class.(16, 3, 4);
"org/apache/commons/text/StrBuilder::setCharAt (size: 18, lines: 4, complexity: 4)".postln;
~class.(18, 4, 4);
"org/apache/commons/text/StrBuilder::deleteCharAt (size: 20, lines: 4, complexity: 4)".postln;
~class.(20, 4, 4);
"org/apache/commons/text/StrBuilder::toCharArray (size: 19, lines: 5, complexity: 3)".postln;
~class.(19, 5, 3);
"org/apache/commons/text/StrBuilder::toCharArray (size: 25, lines: 7, complexity: 3)".postln;
~class.(25, 7, 3);
"org/apache/commons/text/StrBuilder::getChars (size: 21, lines: 5, complexity: 3)".postln;
~class.(21, 5, 3);
"org/apache/commons/text/StrBuilder::getChars (size: 36, lines: 10, complexity: 8)".postln;
~class.(36, 10, 8);
"org/apache/commons/text/StrBuilder::readFrom (size: 118, lines: 26, complexity: 5)".postln;
~class.(118, 26, 5);
"org/apache/commons/text/StrBuilder::appendNewLine (size: 14, lines: 4, complexity: 3)".postln;
~class.(14, 4, 3);
"org/apache/commons/text/StrBuilder::appendNull (size: 10, lines: 3, complexity: 3)".postln;
~class.(10, 3, 3);
"org/apache/commons/text/StrBuilder::append (size: 18, lines: 6, complexity: 5)".postln;
~class.(18, 6, 5);
"org/apache/commons/text/StrBuilder::append (size: 43, lines: 15, complexity: 11)".postln;
~class.(43, 15, 11);
"org/apache/commons/text/StrBuilder::append (size: 13, lines: 3, complexity: 3)".postln;
~class.(13, 3, 3);
"org/apache/commons/text/StrBuilder::append (size: 34, lines: 10, complexity: 4)".postln;
~class.(34, 10, 4);
"org/apache/commons/text/StrBuilder::append (size: 57, lines: 15, complexity: 10)".postln;
~class.(57, 15, 10);
"org/apache/commons/text/StrBuilder::append (size: 46, lines: 12, complexity: 4)".postln;
~class.(46, 12, 4);
"org/apache/commons/text/StrBuilder::append (size: 72, lines: 18, complexity: 10)".postln;
~class.(72, 18, 10);
"org/apache/commons/text/StrBuilder::append (size: 34, lines: 10, complexity: 4)".postln;
~class.(34, 10, 4);
"org/apache/commons/text/StrBuilder::append (size: 57, lines: 15, complexity: 10)".postln;
~class.(57, 15, 10);
"org/apache/commons/text/StrBuilder::append (size: 34, lines: 10, complexity: 4)".postln;
~class.(34, 10, 4);
"org/apache/commons/text/StrBuilder::append (size: 57, lines: 15, complexity: 10)".postln;
~class.(57, 15, 10);
"org/apache/commons/text/StrBuilder::append (size: 35, lines: 10, complexity: 4)".postln;
~class.(35, 10, 4);
"org/apache/commons/text/StrBuilder::append (size: 57, lines: 15, complexity: 10)".postln;
~class.(57, 15, 10);
"org/apache/commons/text/StrBuilder::append (size: 34, lines: 10, complexity: 4)".postln;
~class.(34, 10, 4);
"org/apache/commons/text/StrBuilder::append (size: 69, lines: 15, complexity: 10)".postln;
~class.(69, 15, 10);
"org/apache/commons/text/StrBuilder::append (size: 118, lines: 14, complexity: 2)".postln;
~class.(118, 14, 2);
"org/apache/commons/text/StrBuilder::append (size: 22, lines: 3, complexity: 1)".postln;
~class.(22, 3, 1);
"org/apache/commons/text/StrBuilder::appendAll (size: 27, lines: 5, complexity: 4)".postln;
~class.(27, 5, 4);
"org/apache/commons/text/StrBuilder::appendAll (size: 21, lines: 5, complexity: 3)".postln;
~class.(21, 5, 3);
"org/apache/commons/text/StrBuilder::appendAll (size: 15, lines: 5, complexity: 3)".postln;
~class.(15, 5, 3);
"org/apache/commons/text/StrBuilder::appendWithSeparators (size: 35, lines: 8, complexity: 4)".postln;
~class.(35, 8, 4);
"org/apache/commons/text/StrBuilder::appendWithSeparators (size: 31, lines: 10, complexity: 4)".postln;
~class.(31, 10, 4);
"org/apache/commons/text/StrBuilder::appendWithSeparators (size: 27, lines: 9, complexity: 4)".postln;
~class.(27, 9, 4);
"org/apache/commons/text/StrBuilder::appendSeparator (size: 15, lines: 4, complexity: 3)".postln;
~class.(15, 4, 3);
"org/apache/commons/text/StrBuilder::appendSeparator (size: 9, lines: 3, complexity: 2)".postln;
~class.(9, 3, 2);
"org/apache/commons/text/StrBuilder::appendSeparator (size: 14, lines: 5, complexity: 2)".postln;
~class.(14, 5, 2);
"org/apache/commons/text/StrBuilder::appendSeparator (size: 10, lines: 3, complexity: 3)".postln;
~class.(10, 3, 3);
"org/apache/commons/text/StrBuilder::appendSeparator (size: 8, lines: 3, complexity: 2)".postln;
~class.(8, 3, 2);
"org/apache/commons/text/StrBuilder::appendPadding (size: 29, lines: 6, complexity: 3)".postln;
~class.(29, 6, 3);
"org/apache/commons/text/StrBuilder::appendFixedWidthPadLeft (size: 75, lines: 18, complexity: 6)".postln;
~class.(75, 18, 6);
"org/apache/commons/text/StrBuilder::appendFixedWidthPadRight (size: 73, lines: 18, complexity: 6)".postln;
~class.(73, 18, 6);
"org/apache/commons/text/StrBuilder::insert (size: 14, lines: 3, complexity: 3)".postln;
~class.(14, 3, 3);
"org/apache/commons/text/StrBuilder::insert (size: 49, lines: 14, complexity: 4)".postln;
~class.(49, 14, 4);
"org/apache/commons/text/StrBuilder::insert (size: 51, lines: 11, complexity: 4)".postln;
~class.(51, 11, 4);
"org/apache/commons/text/StrBuilder::insert (size: 86, lines: 16, complexity: 10)".postln;
~class.(86, 16, 10);
"org/apache/commons/text/StrBuilder::insert (size: 112, lines: 19, complexity: 2)".postln;
~class.(112, 19, 2);
"org/apache/commons/text/StrBuilder::insert (size: 36, lines: 5, complexity: 1)".postln;
~class.(36, 5, 1);
"org/apache/commons/text/StrBuilder::deleteImpl (size: 18, lines: 2, complexity: 1)".postln;
~class.(18, 2, 1);
"org/apache/commons/text/StrBuilder::delete (size: 18, lines: 5, complexity: 2)".postln;
~class.(18, 5, 2);
"org/apache/commons/text/StrBuilder::deleteAll (size: 43, lines: 13, complexity: 5)".postln;
~class.(43, 13, 5);
"org/apache/commons/text/StrBuilder::deleteFirst (size: 24, lines: 6, complexity: 3)".postln;
~class.(24, 6, 3);
"org/apache/commons/text/StrBuilder::deleteAll (size: 31, lines: 8, complexity: 4)".postln;
~class.(31, 8, 4);
"org/apache/commons/text/StrBuilder::deleteFirst (size: 25, lines: 7, complexity: 4)".postln;
~class.(25, 7, 4);
"org/apache/commons/text/StrBuilder::replaceImpl (size: 40, lines: 9, complexity: 3)".postln;
~class.(40, 9, 3);
"org/apache/commons/text/StrBuilder::replace (size: 23, lines: 3, complexity: 2)".postln;
~class.(23, 3, 2);
"org/apache/commons/text/StrBuilder::replaceAll (size: 24, lines: 7, complexity: 4)".postln;
~class.(24, 7, 4);
"org/apache/commons/text/StrBuilder::replaceFirst (size: 25, lines: 8, complexity: 4)".postln;
~class.(25, 8, 4);
"org/apache/commons/text/StrBuilder::replaceAll (size: 42, lines: 9, complexity: 5)".postln;
~class.(42, 9, 5);
"org/apache/commons/text/StrBuilder::replaceFirst (size: 34, lines: 8, complexity: 5)".postln;
~class.(34, 8, 5);
"org/apache/commons/text/StrBuilder::replace (size: 13, lines: 1, complexity: 1)".postln;
~class.(13, 1, 1);
"org/apache/commons/text/StrBuilder::replaceImpl (size: 61, lines: 16, complexity: 9)".postln;
~class.(61, 16, 9);
"org/apache/commons/text/StrBuilder::reverse (size: 42, lines: 11, complexity: 4)".postln;
~class.(42, 11, 4);
"org/apache/commons/text/StrBuilder::trim (size: 54, lines: 18, complexity: 9)".postln;
~class.(54, 18, 9);
"org/apache/commons/text/StrBuilder::startsWith (size: 36, lines: 15, complexity: 10)".postln;
~class.(36, 15, 10);
"org/apache/commons/text/StrBuilder::endsWith (size: 42, lines: 16, complexity: 10)".postln;
~class.(42, 16, 10);
"org/apache/commons/text/StrBuilder::subSequence (size: 31, lines: 9, complexity: 7)".postln;
~class.(31, 9, 7);
"org/apache/commons/text/StrBuilder::substring (size: 15, lines: 1, complexity: 1)".postln;
~class.(15, 1, 1);
"org/apache/commons/text/StrBuilder::leftString (size: 25, lines: 5, complexity: 5)".postln;
~class.(25, 5, 5);
"org/apache/commons/text/StrBuilder::rightString (size: 28, lines: 5, complexity: 5)".postln;
~class.(28, 5, 5);
"org/apache/commons/text/StrBuilder::midString (size: 37, lines: 9, complexity: 7)".postln;
~class.(37, 9, 7);
"org/apache/commons/text/StrBuilder::contains (size: 20, lines: 6, complexity: 4)".postln;
~class.(20, 6, 4);
"org/apache/commons/text/StrBuilder::indexOf (size: 32, lines: 10, complexity: 7)".postln;
~class.(32, 10, 7);
"org/apache/commons/text/StrBuilder::indexOf (size: 75, lines: 25, complexity: 15)".postln;
~class.(75, 25, 15);
"org/apache/commons/text/StrBuilder::indexOf (size: 38, lines: 11, complexity: 8)".postln;
~class.(38, 11, 8);
"org/apache/commons/text/StrBuilder::lastIndexOf (size: 31, lines: 9, complexity: 7)".postln;
~class.(31, 9, 7);
"org/apache/commons/text/StrBuilder::lastIndexOf (size: 73, lines: 23, complexity: 15)".postln;
~class.(73, 23, 15);
"org/apache/commons/text/StrBuilder::lastIndexOf (size: 41, lines: 11, complexity: 8)".postln;
~class.(41, 11, 8);
"org/apache/commons/text/StrBuilder::appendTo (size: 57, lines: 11, complexity: 5)".postln;
~class.(57, 11, 5);
"org/apache/commons/text/StrBuilder::equalsIgnoreCase (size: 47, lines: 15, complexity: 9)".postln;
~class.(47, 15, 9);
"org/apache/commons/text/StrBuilder::equals (size: 42, lines: 16, complexity: 10)".postln;
~class.(42, 16, 10);
"org/apache/commons/text/StrBuilder::hashCode (size: 24, lines: 5, complexity: 2)".postln;
~class.(24, 5, 2);
"org/apache/commons/text/StrBuilder::validateRange (size: 24, lines: 9, complexity: 6)".postln;
~class.(24, 9, 6);
"org/apache/commons/text/StrBuilder::validateIndex (size: 12, lines: 3, complexity: 4)".postln;
~class.(12, 3, 4);
"org/apache/commons/text/StrLookup$MapStrLookup::<init> (size: 6, lines: 2, complexity: 1)".postln;
~class.(6, 2, 1);
"org/apache/commons/text/StrLookup$MapStrLookup::lookup (size: 18, lines: 7, complexity: 5)".postln;
~class.(18, 7, 5);
"org/apache/commons/text/StrLookup$ResourceBundleLookup::<init> (size: 6, lines: 2, complexity: 1)".postln;
~class.(6, 2, 1);
"org/apache/commons/text/StrLookup$ResourceBundleLookup::lookup (size: 17, lines: 3, complexity: 5)".postln;
~class.(17, 3, 5);
"org/apache/commons/text/StrLookup$SystemPropertiesStrLookup::lookup (size: 11, lines: 8, complexity: 4)".postln;
~class.(11, 8, 4);
"org/apache/commons/text/StrLookup::<init> (size: 3, lines: 1, complexity: 1)".postln;
~class.(3, 1, 1);
"org/apache/commons/text/StrLookup::<clinit> (size: 11, lines: 5, complexity: 1)".postln;
~class.(11, 5, 1);
"org/apache/commons/text/StrMatcher$CharMatcher::<init> (size: 6, lines: 2, complexity: 1)".postln;
~class.(6, 2, 1);
"org/apache/commons/text/StrMatcher$CharSetMatcher::<init> (size: 11, lines: 3, complexity: 1)".postln;
~class.(11, 3, 1);
"org/apache/commons/text/StrMatcher$NoMatcher::<init> (size: 3, lines: 1, complexity: 1)".postln;
~class.(3, 1, 1);
"org/apache/commons/text/StrMatcher$StringMatcher::<init> (size: 7, lines: 2, complexity: 1)".postln;
~class.(7, 2, 1);
"org/apache/commons/text/StrMatcher$StringMatcher::isMatch (size: 33, lines: 9, complexity: 6)".postln;
~class.(33, 9, 6);
"org/apache/commons/text/StrMatcher$TrimMatcher::<init> (size: 3, lines: 1, complexity: 1)".postln;
~class.(3, 1, 1);
"org/apache/commons/text/StrMatcher::charSetMatcher (size: 21, lines: 6, complexity: 5)".postln;
~class.(21, 6, 5);
"org/apache/commons/text/StrMatcher::charSetMatcher (size: 24, lines: 6, complexity: 6)".postln;
~class.(24, 6, 6);
"org/apache/commons/text/StrMatcher::stringMatcher (size: 12, lines: 3, complexity: 4)".postln;
~class.(12, 3, 4);
"org/apache/commons/text/StrMatcher::<init> (size: 3, lines: 1, complexity: 1)".postln;
~class.(3, 1, 1);
"org/apache/commons/text/StrMatcher::<clinit> (size: 46, lines: 41, complexity: 1)".postln;
~class.(46, 41, 1);
"org/apache/commons/text/StrSubstitutor::replace (size: 36, lines: 10, complexity: 4)".postln;
~class.(36, 10, 4);
"org/apache/commons/text/StrSubstitutor::<init> (size: 8, lines: 1, complexity: 1)".postln;
~class.(8, 1, 1);
"org/apache/commons/text/StrSubstitutor::<init> (size: 8, lines: 1, complexity: 1)".postln;
~class.(8, 1, 1);
"org/apache/commons/text/StrSubstitutor::<init> (size: 8, lines: 1, complexity: 1)".postln;
~class.(8, 1, 1);
"org/apache/commons/text/StrSubstitutor::<init> (size: 8, lines: 1, complexity: 1)".postln;
~class.(8, 1, 1);
"org/apache/commons/text/StrSubstitutor::<init> (size: 9, lines: 1, complexity: 1)".postln;
~class.(9, 1, 1);
"org/apache/commons/text/StrSubstitutor::<init> (size: 7, lines: 1, complexity: 1)".postln;
~class.(7, 1, 1);
"org/apache/commons/text/StrSubstitutor::<init> (size: 24, lines: 6, complexity: 1)".postln;
~class.(24, 6, 1);
"org/apache/commons/text/StrSubstitutor::<init> (size: 24, lines: 6, complexity: 1)".postln;
~class.(24, 6, 1);
"org/apache/commons/text/StrSubstitutor::<init> (size: 8, lines: 1, complexity: 1)".postln;
~class.(8, 1, 1);
"org/apache/commons/text/StrSubstitutor::<init> (size: 24, lines: 6, complexity: 1)".postln;
~class.(24, 6, 1);
"org/apache/commons/text/StrSubstitutor::replace (size: 21, lines: 7, complexity: 5)".postln;
~class.(21, 7, 5);
"org/apache/commons/text/StrSubstitutor::replace (size: 29, lines: 7, complexity: 5)".postln;
~class.(29, 7, 5);
"org/apache/commons/text/StrSubstitutor::replace (size: 22, lines: 5, complexity: 3)".postln;
~class.(22, 5, 3);
"org/apache/commons/text/StrSubstitutor::replace (size: 22, lines: 5, complexity: 3)".postln;
~class.(22, 5, 3);
"org/apache/commons/text/StrSubstitutor::replace (size: 22, lines: 5, complexity: 3)".postln;
~class.(22, 5, 3);
"org/apache/commons/text/StrSubstitutor::replace (size: 22, lines: 5, complexity: 3)".postln;
~class.(22, 5, 3);
"org/apache/commons/text/StrSubstitutor::replace (size: 12, lines: 3, complexity: 3)".postln;
~class.(12, 3, 3);
"org/apache/commons/text/StrSubstitutor::replace (size: 22, lines: 5, complexity: 3)".postln;
~class.(22, 5, 3);
"org/apache/commons/text/StrSubstitutor::replace (size: 22, lines: 5, complexity: 3)".postln;
~class.(22, 5, 3);
"org/apache/commons/text/StrSubstitutor::replace (size: 22, lines: 5, complexity: 3)".postln;
~class.(22, 5, 3);
"org/apache/commons/text/StrSubstitutor::replace (size: 20, lines: 5, complexity: 3)".postln;
~class.(20, 5, 3);
"org/apache/commons/text/StrSubstitutor::replaceIn (size: 11, lines: 3, complexity: 3)".postln;
~class.(11, 3, 3);
"org/apache/commons/text/StrSubstitutor::replaceIn (size: 32, lines: 8, complexity: 5)".postln;
~class.(32, 8, 5);
"org/apache/commons/text/StrSubstitutor::replaceIn (size: 11, lines: 3, complexity: 3)".postln;
~class.(11, 3, 3);
"org/apache/commons/text/StrSubstitutor::replaceIn (size: 32, lines: 8, complexity: 5)".postln;
~class.(32, 8, 5);
"org/apache/commons/text/StrSubstitutor::replaceIn (size: 11, lines: 3, complexity: 3)".postln;
~class.(11, 3, 3);
"org/apache/commons/text/StrSubstitutor::replaceIn (size: 10, lines: 3, complexity: 3)".postln;
~class.(10, 3, 3);
"org/apache/commons/text/StrSubstitutor::substitute (size: 326, lines: 142, complexity: 25)".postln;
~class.(326, 142, 25);
"org/apache/commons/text/StrSubstitutor::checkCyclicSubstitution (size: 38, lines: 8, complexity: 3)".postln;
~class.(38, 8, 3);
"org/apache/commons/text/StrSubstitutor::resolveVariable (size: 11, lines: 4, complexity: 3)".postln;
~class.(11, 4, 3);
"org/apache/commons/text/StrSubstitutor::setEscapeChar (size: 4, lines: 1, complexity: 1)".postln;
~class.(4, 1, 1);
"org/apache/commons/text/StrSubstitutor::setVariablePrefixMatcher (size: 14, lines: 2, complexity: 2)".postln;
~class.(14, 2, 2);
"org/apache/commons/text/StrSubstitutor::setVariablePrefix (size: 14, lines: 1, complexity: 2)".postln;
~class.(14, 1, 2);
"org/apache/commons/text/StrSubstitutor::setVariableSuffixMatcher (size: 14, lines: 2, complexity: 2)".postln;
~class.(14, 2, 2);
"org/apache/commons/text/StrSubstitutor::setVariableSuffix (size: 14, lines: 1, complexity: 2)".postln;
~class.(14, 1, 2);
"org/apache/commons/text/StrSubstitutor::setValueDelimiterMatcher (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/StrSubstitutor::setValueDelimiter (size: 16, lines: 4, complexity: 4)".postln;
~class.(16, 4, 4);
"org/apache/commons/text/StrSubstitutor::setVariableResolver (size: 4, lines: 1, complexity: 1)".postln;
~class.(4, 1, 1);
"org/apache/commons/text/StrSubstitutor::setEnableSubstitutionInVariables (size: 4, lines: 1, complexity: 1)".postln;
~class.(4, 1, 1);
"org/apache/commons/text/StrSubstitutor::setDisableSubstitutionInValues (size: 4, lines: 1, complexity: 1)".postln;
~class.(4, 1, 1);
"org/apache/commons/text/StrSubstitutor::setPreserveEscapes (size: 4, lines: 1, complexity: 1)".postln;
~class.(4, 1, 1);
"org/apache/commons/text/StrSubstitutor::<clinit> (size: 10, lines: 10, complexity: 1)".postln;
~class.(10, 10, 1);
"org/apache/commons/text/StrTokenizer::getCSVInstance (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StrTokenizer::getCSVInstance (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StrTokenizer::getTSVInstance (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StrTokenizer::getTSVInstance (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StrTokenizer::<init> (size: 24, lines: 2, complexity: 1)".postln;
~class.(24, 2, 1);
"org/apache/commons/text/StrTokenizer::<init> (size: 31, lines: 6, complexity: 2)".postln;
~class.(31, 6, 2);
"org/apache/commons/text/StrTokenizer::<init> (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StrTokenizer::<init> (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StrTokenizer::<init> (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StrTokenizer::<init> (size: 9, lines: 2, complexity: 1)".postln;
~class.(9, 2, 1);
"org/apache/commons/text/StrTokenizer::<init> (size: 9, lines: 2, complexity: 1)".postln;
~class.(9, 2, 1);
"org/apache/commons/text/StrTokenizer::<init> (size: 32, lines: 6, complexity: 2)".postln;
~class.(32, 6, 2);
"org/apache/commons/text/StrTokenizer::<init> (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StrTokenizer::<init> (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StrTokenizer::<init> (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StrTokenizer::<init> (size: 9, lines: 2, complexity: 1)".postln;
~class.(9, 2, 1);
"org/apache/commons/text/StrTokenizer::<init> (size: 9, lines: 2, complexity: 1)".postln;
~class.(9, 2, 1);
"org/apache/commons/text/StrTokenizer::size (size: 6, lines: 1, complexity: 1)".postln;
~class.(6, 1, 1);
"org/apache/commons/text/StrTokenizer::nextToken (size: 16, lines: 3, complexity: 3)".postln;
~class.(16, 3, 3);
"org/apache/commons/text/StrTokenizer::previousToken (size: 16, lines: 3, complexity: 3)".postln;
~class.(16, 3, 3);
"org/apache/commons/text/StrTokenizer::getTokenArray (size: 7, lines: 1, complexity: 1)".postln;
~class.(7, 1, 1);
"org/apache/commons/text/StrTokenizer::getTokenList (size: 16, lines: 4, complexity: 1)".postln;
~class.(16, 4, 1);
"org/apache/commons/text/StrTokenizer::reset (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StrTokenizer::reset (size: 15, lines: 6, complexity: 2)".postln;
~class.(15, 6, 2);
"org/apache/commons/text/StrTokenizer::reset (size: 16, lines: 6, complexity: 2)".postln;
~class.(16, 6, 2);
"org/apache/commons/text/StrTokenizer::hasNext (size: 12, lines: 1, complexity: 2)".postln;
~class.(12, 1, 2);
"org/apache/commons/text/StrTokenizer::next (size: 18, lines: 3, complexity: 3)".postln;
~class.(18, 3, 3);
"org/apache/commons/text/StrTokenizer::hasPrevious (size: 9, lines: 1, complexity: 2)".postln;
~class.(9, 1, 2);
"org/apache/commons/text/StrTokenizer::previous (size: 18, lines: 3, complexity: 3)".postln;
~class.(18, 3, 3);
"org/apache/commons/text/StrTokenizer::checkTokenized (size: 43, lines: 10, complexity: 3)".postln;
~class.(43, 10, 3);
"org/apache/commons/text/StrTokenizer::tokenize (size: 39, lines: 17, complexity: 7)".postln;
~class.(39, 17, 7);
"org/apache/commons/text/StrTokenizer::addToken (size: 20, lines: 9, complexity: 6)".postln;
~class.(20, 9, 6);
"org/apache/commons/text/StrTokenizer::readNextToken (size: 102, lines: 30, complexity: 11)".postln;
~class.(102, 30, 11);
"org/apache/commons/text/StrTokenizer::readWithQuotes (size: 164, lines: 78, complexity: 12)".postln;
~class.(164, 78, 12);
"org/apache/commons/text/StrTokenizer::isQuote (size: 27, lines: 5, complexity: 5)".postln;
~class.(27, 5, 5);
"org/apache/commons/text/StrTokenizer::setDelimiterMatcher (size: 11, lines: 5, complexity: 2)".postln;
~class.(11, 5, 2);
"org/apache/commons/text/StrTokenizer::setQuoteMatcher (size: 7, lines: 3, complexity: 2)".postln;
~class.(7, 3, 2);
"org/apache/commons/text/StrTokenizer::setIgnoredMatcher (size: 7, lines: 3, complexity: 2)".postln;
~class.(7, 3, 2);
"org/apache/commons/text/StrTokenizer::setTrimmerMatcher (size: 7, lines: 3, complexity: 2)".postln;
~class.(7, 3, 2);
"org/apache/commons/text/StrTokenizer::setEmptyTokenAsNull (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/StrTokenizer::setIgnoreEmptyTokens (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/StrTokenizer::getContent (size: 11, lines: 3, complexity: 3)".postln;
~class.(11, 3, 3);
"org/apache/commons/text/StrTokenizer::clone (size: 6, lines: 2, complexity: 2)".postln;
~class.(6, 2, 2);
"org/apache/commons/text/StrTokenizer::cloneReset (size: 18, lines: 5, complexity: 2)".postln;
~class.(18, 5, 2);
"org/apache/commons/text/StrTokenizer::toString (size: 15, lines: 3, complexity: 3)".postln;
~class.(15, 3, 3);
"org/apache/commons/text/StrTokenizer::<clinit> (size: 57, lines: 15, complexity: 1)".postln;
~class.(57, 15, 1);
"org/apache/commons/text/StringEscapeUtils$Builder::<init> (size: 11, lines: 3, complexity: 1)".postln;
~class.(11, 3, 1);
"org/apache/commons/text/StringEscapeUtils$Builder::escape (size: 10, lines: 1, complexity: 1)".postln;
~class.(10, 1, 1);
"org/apache/commons/text/StringEscapeUtils$Builder::append (size: 7, lines: 1, complexity: 1)".postln;
~class.(7, 1, 1);
"org/apache/commons/text/StringEscapeUtils$XsiUnescaper::translate (size: 58, lines: 23, complexity: 6)".postln;
~class.(58, 23, 6);
"org/apache/commons/text/StringEscapeUtils::<init> (size: 3, lines: 1, complexity: 1)".postln;
~class.(3, 1, 1);
"org/apache/commons/text/StringEscapeUtils::<clinit> (size: 839, lines: 302, complexity: 1)".postln;
~class.(839, 302, 1);
"org/apache/commons/text/StringSubstitutor$Result::<init> (size: 9, lines: 3, complexity: 1)".postln;
~class.(9, 3, 1);
"org/apache/commons/text/StringSubstitutor::replace (size: 36, lines: 10, complexity: 4)".postln;
~class.(36, 10, 4);
"org/apache/commons/text/StringSubstitutor::<init> (size: 8, lines: 1, complexity: 1)".postln;
~class.(8, 1, 1);
"org/apache/commons/text/StringSubstitutor::<init> (size: 9, lines: 1, complexity: 1)".postln;
~class.(9, 1, 1);
"org/apache/commons/text/StringSubstitutor::<init> (size: 9, lines: 1, complexity: 1)".postln;
~class.(9, 1, 1);
"org/apache/commons/text/StringSubstitutor::<init> (size: 9, lines: 1, complexity: 1)".postln;
~class.(9, 1, 1);
"org/apache/commons/text/StringSubstitutor::<init> (size: 10, lines: 1, complexity: 1)".postln;
~class.(10, 1, 1);
"org/apache/commons/text/StringSubstitutor::<init> (size: 7, lines: 1, complexity: 1)".postln;
~class.(7, 1, 1);
"org/apache/commons/text/StringSubstitutor::<init> (size: 23, lines: 6, complexity: 1)".postln;
~class.(23, 6, 1);
"org/apache/commons/text/StringSubstitutor::<init> (size: 23, lines: 6, complexity: 1)".postln;
~class.(23, 6, 1);
"org/apache/commons/text/StringSubstitutor::<init> (size: 8, lines: 1, complexity: 1)".postln;
~class.(8, 1, 1);
"org/apache/commons/text/StringSubstitutor::<init> (size: 23, lines: 6, complexity: 1)".postln;
~class.(23, 6, 1);
"org/apache/commons/text/StringSubstitutor::<init> (size: 39, lines: 10, complexity: 1)".postln;
~class.(39, 10, 1);
"org/apache/commons/text/StringSubstitutor::checkCyclicSubstitution (size: 38, lines: 8, complexity: 3)".postln;
~class.(38, 8, 3);
"org/apache/commons/text/StringSubstitutor::replace (size: 22, lines: 5, complexity: 3)".postln;
~class.(22, 5, 3);
"org/apache/commons/text/StringSubstitutor::replace (size: 22, lines: 5, complexity: 3)".postln;
~class.(22, 5, 3);
"org/apache/commons/text/StringSubstitutor::replace (size: 12, lines: 3, complexity: 3)".postln;
~class.(12, 3, 3);
"org/apache/commons/text/StringSubstitutor::replace (size: 24, lines: 5, complexity: 3)".postln;
~class.(24, 5, 3);
"org/apache/commons/text/StringSubstitutor::replace (size: 20, lines: 5, complexity: 3)".postln;
~class.(20, 5, 3);
"org/apache/commons/text/StringSubstitutor::replace (size: 21, lines: 7, complexity: 5)".postln;
~class.(21, 7, 5);
"org/apache/commons/text/StringSubstitutor::replace (size: 29, lines: 7, complexity: 5)".postln;
~class.(29, 7, 5);
"org/apache/commons/text/StringSubstitutor::replace (size: 22, lines: 5, complexity: 3)".postln;
~class.(22, 5, 3);
"org/apache/commons/text/StringSubstitutor::replace (size: 22, lines: 5, complexity: 3)".postln;
~class.(22, 5, 3);
"org/apache/commons/text/StringSubstitutor::replace (size: 22, lines: 5, complexity: 3)".postln;
~class.(22, 5, 3);
"org/apache/commons/text/StringSubstitutor::replace (size: 22, lines: 5, complexity: 3)".postln;
~class.(22, 5, 3);
"org/apache/commons/text/StringSubstitutor::replaceIn (size: 11, lines: 3, complexity: 3)".postln;
~class.(11, 3, 3);
"org/apache/commons/text/StringSubstitutor::replaceIn (size: 32, lines: 8, complexity: 5)".postln;
~class.(32, 8, 5);
"org/apache/commons/text/StringSubstitutor::replaceIn (size: 11, lines: 3, complexity: 3)".postln;
~class.(11, 3, 3);
"org/apache/commons/text/StringSubstitutor::replaceIn (size: 32, lines: 8, complexity: 5)".postln;
~class.(32, 8, 5);
"org/apache/commons/text/StringSubstitutor::replaceIn (size: 11, lines: 3, complexity: 3)".postln;
~class.(11, 3, 3);
"org/apache/commons/text/StringSubstitutor::replaceIn (size: 10, lines: 3, complexity: 3)".postln;
~class.(10, 3, 3);
"org/apache/commons/text/StringSubstitutor::resolveVariable (size: 12, lines: 4, complexity: 3)".postln;
~class.(12, 4, 3);
"org/apache/commons/text/StringSubstitutor::setDisableSubstitutionInValues (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/StringSubstitutor::setEnableSubstitutionInVariables (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/StringSubstitutor::setEnableUndefinedVariableException (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/StringSubstitutor::setEscapeChar (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/StringSubstitutor::setPreserveEscapes (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/StringSubstitutor::setValueDelimiter (size: 17, lines: 4, complexity: 4)".postln;
~class.(17, 4, 4);
"org/apache/commons/text/StringSubstitutor::setValueDelimiterMatcher (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/StringSubstitutor::setVariablePrefix (size: 15, lines: 1, complexity: 2)".postln;
~class.(15, 1, 2);
"org/apache/commons/text/StringSubstitutor::setVariablePrefixMatcher (size: 14, lines: 2, complexity: 2)".postln;
~class.(14, 2, 2);
"org/apache/commons/text/StringSubstitutor::setVariableResolver (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/StringSubstitutor::setVariableSuffix (size: 15, lines: 1, complexity: 2)".postln;
~class.(15, 1, 2);
"org/apache/commons/text/StringSubstitutor::setVariableSuffixMatcher (size: 14, lines: 2, complexity: 2)".postln;
~class.(14, 2, 2);
"org/apache/commons/text/StringSubstitutor::substitute (size: 360, lines: 140, complexity: 24)".postln;
~class.(360, 140, 24);
"org/apache/commons/text/StringSubstitutor::<clinit> (size: 13, lines: 10, complexity: 1)".postln;
~class.(13, 10, 1);
"org/apache/commons/text/StringTokenizer::getCSVInstance (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StringTokenizer::getCSVInstance (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StringTokenizer::getTSVInstance (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StringTokenizer::getTSVInstance (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StringTokenizer::<init> (size: 28, lines: 2, complexity: 1)".postln;
~class.(28, 2, 1);
"org/apache/commons/text/StringTokenizer::<init> (size: 35, lines: 6, complexity: 2)".postln;
~class.(35, 6, 2);
"org/apache/commons/text/StringTokenizer::<init> (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StringTokenizer::<init> (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StringTokenizer::<init> (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StringTokenizer::<init> (size: 9, lines: 2, complexity: 1)".postln;
~class.(9, 2, 1);
"org/apache/commons/text/StringTokenizer::<init> (size: 9, lines: 2, complexity: 1)".postln;
~class.(9, 2, 1);
"org/apache/commons/text/StringTokenizer::<init> (size: 36, lines: 6, complexity: 2)".postln;
~class.(36, 6, 2);
"org/apache/commons/text/StringTokenizer::<init> (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StringTokenizer::<init> (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StringTokenizer::<init> (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StringTokenizer::<init> (size: 9, lines: 2, complexity: 1)".postln;
~class.(9, 2, 1);
"org/apache/commons/text/StringTokenizer::<init> (size: 9, lines: 2, complexity: 1)".postln;
~class.(9, 2, 1);
"org/apache/commons/text/StringTokenizer::size (size: 6, lines: 1, complexity: 1)".postln;
~class.(6, 1, 1);
"org/apache/commons/text/StringTokenizer::nextToken (size: 16, lines: 3, complexity: 3)".postln;
~class.(16, 3, 3);
"org/apache/commons/text/StringTokenizer::previousToken (size: 16, lines: 3, complexity: 3)".postln;
~class.(16, 3, 3);
"org/apache/commons/text/StringTokenizer::getTokenArray (size: 7, lines: 1, complexity: 1)".postln;
~class.(7, 1, 1);
"org/apache/commons/text/StringTokenizer::getTokenList (size: 16, lines: 4, complexity: 1)".postln;
~class.(16, 4, 1);
"org/apache/commons/text/StringTokenizer::reset (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/StringTokenizer::reset (size: 15, lines: 6, complexity: 2)".postln;
~class.(15, 6, 2);
"org/apache/commons/text/StringTokenizer::reset (size: 16, lines: 6, complexity: 2)".postln;
~class.(16, 6, 2);
"org/apache/commons/text/StringTokenizer::hasNext (size: 12, lines: 1, complexity: 2)".postln;
~class.(12, 1, 2);
"org/apache/commons/text/StringTokenizer::next (size: 18, lines: 3, complexity: 3)".postln;
~class.(18, 3, 3);
"org/apache/commons/text/StringTokenizer::hasPrevious (size: 9, lines: 1, complexity: 2)".postln;
~class.(9, 1, 2);
"org/apache/commons/text/StringTokenizer::previous (size: 18, lines: 3, complexity: 3)".postln;
~class.(18, 3, 3);
"org/apache/commons/text/StringTokenizer::checkTokenized (size: 43, lines: 10, complexity: 3)".postln;
~class.(43, 10, 3);
"org/apache/commons/text/StringTokenizer::tokenize (size: 39, lines: 17, complexity: 7)".postln;
~class.(39, 17, 7);
"org/apache/commons/text/StringTokenizer::addToken (size: 20, lines: 9, complexity: 6)".postln;
~class.(20, 9, 6);
"org/apache/commons/text/StringTokenizer::readNextToken (size: 108, lines: 28, complexity: 11)".postln;
~class.(108, 28, 11);
"org/apache/commons/text/StringTokenizer::readWithQuotes (size: 167, lines: 78, complexity: 12)".postln;
~class.(167, 78, 12);
"org/apache/commons/text/StringTokenizer::isQuote (size: 27, lines: 5, complexity: 5)".postln;
~class.(27, 5, 5);
"org/apache/commons/text/StringTokenizer::setDelimiterMatcher (size: 12, lines: 5, complexity: 2)".postln;
~class.(12, 5, 2);
"org/apache/commons/text/StringTokenizer::setQuoteMatcher (size: 7, lines: 3, complexity: 2)".postln;
~class.(7, 3, 2);
"org/apache/commons/text/StringTokenizer::setIgnoredMatcher (size: 7, lines: 3, complexity: 2)".postln;
~class.(7, 3, 2);
"org/apache/commons/text/StringTokenizer::setTrimmerMatcher (size: 7, lines: 3, complexity: 2)".postln;
~class.(7, 3, 2);
"org/apache/commons/text/StringTokenizer::setEmptyTokenAsNull (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/StringTokenizer::setIgnoreEmptyTokens (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/StringTokenizer::getContent (size: 11, lines: 3, complexity: 3)".postln;
~class.(11, 3, 3);
"org/apache/commons/text/StringTokenizer::clone (size: 6, lines: 2, complexity: 2)".postln;
~class.(6, 2, 2);
"org/apache/commons/text/StringTokenizer::cloneReset (size: 18, lines: 5, complexity: 2)".postln;
~class.(18, 5, 2);
"org/apache/commons/text/StringTokenizer::toString (size: 15, lines: 3, complexity: 3)".postln;
~class.(15, 3, 3);
"org/apache/commons/text/StringTokenizer::<clinit> (size: 65, lines: 15, complexity: 1)".postln;
~class.(65, 15, 1);
"org/apache/commons/text/TextStringBuilder$TextStringBuilderReader::<init> (size: 6, lines: 2, complexity: 1)".postln;
~class.(6, 2, 1);
"org/apache/commons/text/TextStringBuilder$TextStringBuilderReader::mark (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/TextStringBuilder$TextStringBuilderReader::read (size: 16, lines: 3, complexity: 3)".postln;
~class.(16, 3, 3);
"org/apache/commons/text/TextStringBuilder$TextStringBuilderReader::read (size: 68, lines: 14, complexity: 12)".postln;
~class.(68, 14, 12);
"org/apache/commons/text/TextStringBuilder$TextStringBuilderReader::reset (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/TextStringBuilder$TextStringBuilderReader::skip (size: 35, lines: 7, complexity: 4)".postln;
~class.(35, 7, 4);
"org/apache/commons/text/TextStringBuilder$TextStringBuilderTokenizer::<init> (size: 6, lines: 2, complexity: 1)".postln;
~class.(6, 2, 1);
"org/apache/commons/text/TextStringBuilder$TextStringBuilderTokenizer::getContent (size: 11, lines: 4, complexity: 3)".postln;
~class.(11, 4, 3);
"org/apache/commons/text/TextStringBuilder$TextStringBuilderTokenizer::tokenize (size: 18, lines: 3, complexity: 3)".postln;
~class.(18, 3, 3);
"org/apache/commons/text/TextStringBuilder$TextStringBuilderWriter::<init> (size: 6, lines: 2, complexity: 1)".postln;
~class.(6, 2, 1);
"org/apache/commons/text/TextStringBuilder$TextStringBuilderWriter::write (size: 6, lines: 1, complexity: 1)".postln;
~class.(6, 1, 1);
"org/apache/commons/text/TextStringBuilder$TextStringBuilderWriter::write (size: 8, lines: 1, complexity: 1)".postln;
~class.(8, 1, 1);
"org/apache/commons/text/TextStringBuilder$TextStringBuilderWriter::write (size: 7, lines: 1, complexity: 1)".postln;
~class.(7, 1, 1);
"org/apache/commons/text/TextStringBuilder$TextStringBuilderWriter::write (size: 6, lines: 1, complexity: 1)".postln;
~class.(6, 1, 1);
"org/apache/commons/text/TextStringBuilder$TextStringBuilderWriter::write (size: 8, lines: 1, complexity: 1)".postln;
~class.(8, 1, 1);
"org/apache/commons/text/TextStringBuilder::wrap (size: 11, lines: 1, complexity: 1)".postln;
~class.(11, 1, 1);
"org/apache/commons/text/TextStringBuilder::<init> (size: 4, lines: 1, complexity: 1)".postln;
~class.(4, 1, 1);
"org/apache/commons/text/TextStringBuilder::<init> (size: 35, lines: 6, complexity: 4)".postln;
~class.(35, 6, 4);
"org/apache/commons/text/TextStringBuilder::<init> (size: 13, lines: 4, complexity: 2)".postln;
~class.(13, 4, 2);
"org/apache/commons/text/TextStringBuilder::<init> (size: 11, lines: 2, complexity: 2)".postln;
~class.(11, 2, 2);
"org/apache/commons/text/TextStringBuilder::<init> (size: 13, lines: 4, complexity: 2)".postln;
~class.(13, 4, 2);
"org/apache/commons/text/TextStringBuilder::append (size: 27, lines: 7, complexity: 2)".postln;
~class.(27, 7, 2);
"org/apache/commons/text/TextStringBuilder::append (size: 22, lines: 3, complexity: 1)".postln;
~class.(22, 3, 1);
"org/apache/commons/text/TextStringBuilder::append (size: 34, lines: 10, complexity: 4)".postln;
~class.(34, 10, 4);
"org/apache/commons/text/TextStringBuilder::append (size: 69, lines: 15, complexity: 10)".postln;
~class.(69, 15, 10);
"org/apache/commons/text/TextStringBuilder::append (size: 72, lines: 18, complexity: 10)".postln;
~class.(72, 18, 10);
"org/apache/commons/text/TextStringBuilder::append (size: 43, lines: 15, complexity: 11)".postln;
~class.(43, 15, 11);
"org/apache/commons/text/TextStringBuilder::append (size: 30, lines: 9, complexity: 7)".postln;
~class.(30, 9, 7);
"org/apache/commons/text/TextStringBuilder::append (size: 18, lines: 6, complexity: 5)".postln;
~class.(18, 6, 5);
"org/apache/commons/text/TextStringBuilder::append (size: 57, lines: 15, complexity: 10)".postln;
~class.(57, 15, 10);
"org/apache/commons/text/TextStringBuilder::append (size: 57, lines: 15, complexity: 10)".postln;
~class.(57, 15, 10);
"org/apache/commons/text/TextStringBuilder::append (size: 57, lines: 15, complexity: 10)".postln;
~class.(57, 15, 10);
"org/apache/commons/text/TextStringBuilder::append (size: 57, lines: 15, complexity: 10)".postln;
~class.(57, 15, 10);
"org/apache/commons/text/TextStringBuilder::appendAll (size: 21, lines: 5, complexity: 3)".postln;
~class.(21, 5, 3);
"org/apache/commons/text/TextStringBuilder::appendAll (size: 15, lines: 5, complexity: 3)".postln;
~class.(15, 5, 3);
"org/apache/commons/text/TextStringBuilder::appendAll (size: 27, lines: 5, complexity: 4)".postln;
~class.(27, 5, 4);
"org/apache/commons/text/TextStringBuilder::appendFalse (size: 36, lines: 6, complexity: 1)".postln;
~class.(36, 6, 1);
"org/apache/commons/text/TextStringBuilder::appendFixedWidthPadLeft (size: 75, lines: 18, complexity: 6)".postln;
~class.(75, 18, 6);
"org/apache/commons/text/TextStringBuilder::appendFixedWidthPadRight (size: 73, lines: 18, complexity: 6)".postln;
~class.(73, 18, 6);
"org/apache/commons/text/TextStringBuilder::appendNewLine (size: 14, lines: 4, complexity: 3)".postln;
~class.(14, 4, 3);
"org/apache/commons/text/TextStringBuilder::appendNull (size: 10, lines: 3, complexity: 3)".postln;
~class.(10, 3, 3);
"org/apache/commons/text/TextStringBuilder::appendPadding (size: 29, lines: 6, complexity: 3)".postln;
~class.(29, 6, 3);
"org/apache/commons/text/TextStringBuilder::appendSeparator (size: 9, lines: 3, complexity: 2)".postln;
~class.(9, 3, 2);
"org/apache/commons/text/TextStringBuilder::appendSeparator (size: 14, lines: 5, complexity: 2)".postln;
~class.(14, 5, 2);
"org/apache/commons/text/TextStringBuilder::appendSeparator (size: 8, lines: 3, complexity: 2)".postln;
~class.(8, 3, 2);
"org/apache/commons/text/TextStringBuilder::appendSeparator (size: 10, lines: 3, complexity: 3)".postln;
~class.(10, 3, 3);
"org/apache/commons/text/TextStringBuilder::appendSeparator (size: 15, lines: 4, complexity: 3)".postln;
~class.(15, 4, 3);
"org/apache/commons/text/TextStringBuilder::appendTo (size: 57, lines: 11, complexity: 5)".postln;
~class.(57, 11, 5);
"org/apache/commons/text/TextStringBuilder::appendTrue (size: 30, lines: 5, complexity: 1)".postln;
~class.(30, 5, 1);
"org/apache/commons/text/TextStringBuilder::appendWithSeparators (size: 31, lines: 10, complexity: 4)".postln;
~class.(31, 10, 4);
"org/apache/commons/text/TextStringBuilder::appendWithSeparators (size: 27, lines: 9, complexity: 4)".postln;
~class.(27, 9, 4);
"org/apache/commons/text/TextStringBuilder::appendWithSeparators (size: 35, lines: 8, complexity: 4)".postln;
~class.(35, 8, 4);
"org/apache/commons/text/TextStringBuilder::charAt (size: 8, lines: 1, complexity: 1)".postln;
~class.(8, 1, 1);
"org/apache/commons/text/TextStringBuilder::clear (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/TextStringBuilder::contains (size: 20, lines: 6, complexity: 4)".postln;
~class.(20, 6, 4);
"org/apache/commons/text/TextStringBuilder::delete (size: 18, lines: 5, complexity: 2)".postln;
~class.(18, 5, 2);
"org/apache/commons/text/TextStringBuilder::deleteAll (size: 43, lines: 13, complexity: 5)".postln;
~class.(43, 13, 5);
"org/apache/commons/text/TextStringBuilder::deleteAll (size: 31, lines: 8, complexity: 4)".postln;
~class.(31, 8, 4);
"org/apache/commons/text/TextStringBuilder::deleteCharAt (size: 12, lines: 2, complexity: 1)".postln;
~class.(12, 2, 1);
"org/apache/commons/text/TextStringBuilder::deleteFirst (size: 24, lines: 6, complexity: 3)".postln;
~class.(24, 6, 3);
"org/apache/commons/text/TextStringBuilder::deleteFirst (size: 25, lines: 7, complexity: 4)".postln;
~class.(25, 7, 4);
"org/apache/commons/text/TextStringBuilder::deleteImpl (size: 18, lines: 2, complexity: 1)".postln;
~class.(18, 2, 1);
"org/apache/commons/text/TextStringBuilder::drainChar (size: 14, lines: 3, complexity: 1)".postln;
~class.(14, 3, 1);
"org/apache/commons/text/TextStringBuilder::drainChars (size: 37, lines: 7, complexity: 5)".postln;
~class.(37, 7, 5);
"org/apache/commons/text/TextStringBuilder::endsWith (size: 42, lines: 16, complexity: 10)".postln;
~class.(42, 16, 10);
"org/apache/commons/text/TextStringBuilder::ensureCapacity (size: 12, lines: 3, complexity: 2)".postln;
~class.(12, 3, 2);
"org/apache/commons/text/TextStringBuilder::equalsIgnoreCase (size: 47, lines: 15, complexity: 9)".postln;
~class.(47, 15, 9);
"org/apache/commons/text/TextStringBuilder::getChars (size: 21, lines: 5, complexity: 3)".postln;
~class.(21, 5, 3);
"org/apache/commons/text/TextStringBuilder::getChars (size: 36, lines: 10, complexity: 8)".postln;
~class.(36, 10, 8);
"org/apache/commons/text/TextStringBuilder::indexOf (size: 30, lines: 10, complexity: 6)".postln;
~class.(30, 10, 6);
"org/apache/commons/text/TextStringBuilder::indexOf (size: 73, lines: 24, complexity: 14)".postln;
~class.(73, 24, 14);
"org/apache/commons/text/TextStringBuilder::indexOf (size: 37, lines: 11, complexity: 7)".postln;
~class.(37, 11, 7);
"org/apache/commons/text/TextStringBuilder::insert (size: 54, lines: 10, complexity: 2)".postln;
~class.(54, 10, 2);
"org/apache/commons/text/TextStringBuilder::insert (size: 36, lines: 5, complexity: 1)".postln;
~class.(36, 5, 1);
"org/apache/commons/text/TextStringBuilder::insert (size: 51, lines: 11, complexity: 4)".postln;
~class.(51, 11, 4);
"org/apache/commons/text/TextStringBuilder::insert (size: 86, lines: 16, complexity: 10)".postln;
~class.(86, 16, 10);
"org/apache/commons/text/TextStringBuilder::insert (size: 14, lines: 3, complexity: 3)".postln;
~class.(14, 3, 3);
"org/apache/commons/text/TextStringBuilder::insert (size: 49, lines: 14, complexity: 4)".postln;
~class.(49, 14, 4);
"org/apache/commons/text/TextStringBuilder::lastIndexOf (size: 31, lines: 9, complexity: 7)".postln;
~class.(31, 9, 7);
"org/apache/commons/text/TextStringBuilder::lastIndexOf (size: 73, lines: 22, complexity: 15)".postln;
~class.(73, 22, 15);
"org/apache/commons/text/TextStringBuilder::lastIndexOf (size: 42, lines: 11, complexity: 8)".postln;
~class.(42, 11, 8);
"org/apache/commons/text/TextStringBuilder::leftString (size: 25, lines: 5, complexity: 5)".postln;
~class.(25, 5, 5);
"org/apache/commons/text/TextStringBuilder::midString (size: 37, lines: 9, complexity: 7)".postln;
~class.(37, 9, 7);
"org/apache/commons/text/TextStringBuilder::minimizeCapacity (size: 12, lines: 3, complexity: 2)".postln;
~class.(12, 3, 2);
"org/apache/commons/text/TextStringBuilder::readFrom (size: 32, lines: 5, complexity: 1)".postln;
~class.(32, 5, 1);
"org/apache/commons/text/TextStringBuilder::readFrom (size: 59, lines: 15, complexity: 6)".postln;
~class.(59, 15, 6);
"org/apache/commons/text/TextStringBuilder::readFrom (size: 62, lines: 11, complexity: 4)".postln;
~class.(62, 11, 4);
"org/apache/commons/text/TextStringBuilder::readFrom (size: 57, lines: 15, complexity: 7)".postln;
~class.(57, 15, 7);
"org/apache/commons/text/TextStringBuilder::reallocate (size: 13, lines: 2, complexity: 1)".postln;
~class.(13, 2, 1);
"org/apache/commons/text/TextStringBuilder::replace (size: 23, lines: 3, complexity: 2)".postln;
~class.(23, 3, 2);
"org/apache/commons/text/TextStringBuilder::replace (size: 13, lines: 1, complexity: 1)".postln;
~class.(13, 1, 1);
"org/apache/commons/text/TextStringBuilder::replaceAll (size: 24, lines: 7, complexity: 4)".postln;
~class.(24, 7, 4);
"org/apache/commons/text/TextStringBuilder::replaceAll (size: 42, lines: 9, complexity: 5)".postln;
~class.(42, 9, 5);
"org/apache/commons/text/TextStringBuilder::replaceFirst (size: 25, lines: 8, complexity: 4)".postln;
~class.(25, 8, 4);
"org/apache/commons/text/TextStringBuilder::replaceFirst (size: 34, lines: 8, complexity: 5)".postln;
~class.(34, 8, 5);
"org/apache/commons/text/TextStringBuilder::replaceImpl (size: 40, lines: 9, complexity: 3)".postln;
~class.(40, 9, 3);
"org/apache/commons/text/TextStringBuilder::replaceImpl (size: 62, lines: 16, complexity: 9)".postln;
~class.(62, 16, 9);
"org/apache/commons/text/TextStringBuilder::reverse (size: 42, lines: 11, complexity: 4)".postln;
~class.(42, 11, 4);
"org/apache/commons/text/TextStringBuilder::rightString (size: 28, lines: 5, complexity: 5)".postln;
~class.(28, 5, 5);
"org/apache/commons/text/TextStringBuilder::set (size: 9, lines: 2, complexity: 1)".postln;
~class.(9, 2, 1);
"org/apache/commons/text/TextStringBuilder::setCharAt (size: 10, lines: 2, complexity: 1)".postln;
~class.(10, 2, 1);
"org/apache/commons/text/TextStringBuilder::setLength (size: 39, lines: 12, complexity: 5)".postln;
~class.(39, 12, 5);
"org/apache/commons/text/TextStringBuilder::setNewLineText (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/TextStringBuilder::setNullText (size: 12, lines: 4, complexity: 3)".postln;
~class.(12, 4, 3);
"org/apache/commons/text/TextStringBuilder::startsWith (size: 36, lines: 15, complexity: 10)".postln;
~class.(36, 15, 10);
"org/apache/commons/text/TextStringBuilder::subSequence (size: 31, lines: 9, complexity: 7)".postln;
~class.(31, 9, 7);
"org/apache/commons/text/TextStringBuilder::substring (size: 15, lines: 1, complexity: 1)".postln;
~class.(15, 1, 1);
"org/apache/commons/text/TextStringBuilder::toCharArray (size: 19, lines: 2, complexity: 2)".postln;
~class.(19, 2, 2);
"org/apache/commons/text/TextStringBuilder::trim (size: 54, lines: 18, complexity: 9)".postln;
~class.(54, 18, 9);
"org/apache/commons/text/TextStringBuilder::validateIndex (size: 12, lines: 3, complexity: 4)".postln;
~class.(12, 3, 4);
"org/apache/commons/text/TextStringBuilder::validateRange (size: 24, lines: 9, complexity: 6)".postln;
~class.(24, 9, 6);
"org/apache/commons/text/TextStringBuilder::<clinit> (size: 9, lines: 12, complexity: 1)".postln;
~class.(9, 12, 1);
"org/apache/commons/text/WordUtils::<init> (size: 3, lines: 1, complexity: 1)".postln;
~class.(3, 1, 1);
"org/apache/commons/text/WordUtils::wrap (size: 219, lines: 94, complexity: 23)".postln;
~class.(219, 94, 23);
"org/apache/commons/text/WordUtils::capitalize (size: 82, lines: 26, complexity: 6)".postln;
~class.(82, 26, 6);
"org/apache/commons/text/WordUtils::capitalizeFully (size: 12, lines: 4, complexity: 3)".postln;
~class.(12, 4, 3);
"org/apache/commons/text/WordUtils::uncapitalize (size: 82, lines: 26, complexity: 6)".postln;
~class.(82, 26, 6);
"org/apache/commons/text/WordUtils::swapCase (size: 74, lines: 27, complexity: 8)".postln;
~class.(74, 27, 8);
"org/apache/commons/text/WordUtils::initials (size: 74, lines: 23, complexity: 11)".postln;
~class.(74, 23, 11);
"org/apache/commons/text/WordUtils::containsAllWords (size: 50, lines: 12, complexity: 9)".postln;
~class.(50, 12, 9);
"org/apache/commons/text/WordUtils::isDelimiter (size: 28, lines: 8, complexity: 6)".postln;
~class.(28, 8, 6);
"org/apache/commons/text/WordUtils::isDelimiter (size: 24, lines: 9, complexity: 6)".postln;
~class.(24, 9, 6);
"org/apache/commons/text/WordUtils::abbreviate (size: 102, lines: 35, complexity: 12)".postln;
~class.(102, 35, 12);
"org/apache/commons/text/WordUtils::generateDelimiterSet (size: 44, lines: 12, complexity: 6)".postln;
~class.(44, 12, 6);
"org/apache/commons/text/diff/DeleteCommand::<init> (size: 4, lines: 1, complexity: 1)".postln;
~class.(4, 1, 1);
"org/apache/commons/text/diff/DeleteCommand::accept (size: 6, lines: 1, complexity: 1)".postln;
~class.(6, 1, 1);
"org/apache/commons/text/diff/EditCommand::<init> (size: 6, lines: 2, complexity: 1)".postln;
~class.(6, 2, 1);
"org/apache/commons/text/diff/EditScript::<init> (size: 14, lines: 4, complexity: 1)".postln;
~class.(14, 4, 1);
"org/apache/commons/text/diff/EditScript::append (size: 13, lines: 2, complexity: 1)".postln;
~class.(13, 2, 1);
"org/apache/commons/text/diff/EditScript::append (size: 13, lines: 2, complexity: 1)".postln;
~class.(13, 2, 1);
"org/apache/commons/text/diff/EditScript::append (size: 13, lines: 2, complexity: 1)".postln;
~class.(13, 2, 1);
"org/apache/commons/text/diff/EditScript::visit (size: 19, lines: 3, complexity: 2)".postln;
~class.(19, 3, 2);
"org/apache/commons/text/diff/InsertCommand::<init> (size: 4, lines: 1, complexity: 1)".postln;
~class.(4, 1, 1);
"org/apache/commons/text/diff/InsertCommand::accept (size: 6, lines: 1, complexity: 1)".postln;
~class.(6, 1, 1);
"org/apache/commons/text/diff/KeepCommand::<init> (size: 4, lines: 1, complexity: 1)".postln;
~class.(4, 1, 1);
"org/apache/commons/text/diff/KeepCommand::accept (size: 6, lines: 1, complexity: 1)".postln;
~class.(6, 1, 1);
"org/apache/commons/text/diff/ReplacementsFinder::<init> (size: 19, lines: 5, complexity: 1)".postln;
~class.(19, 5, 1);
"org/apache/commons/text/diff/ReplacementsFinder::visitInsertCommand (size: 7, lines: 1, complexity: 1)".postln;
~class.(7, 1, 1);
"org/apache/commons/text/diff/ReplacementsFinder::visitKeepCommand (size: 39, lines: 8, complexity: 3)".postln;
~class.(39, 8, 3);
"org/apache/commons/text/diff/ReplacementsFinder::visitDeleteCommand (size: 7, lines: 1, complexity: 1)".postln;
~class.(7, 1, 1);
"org/apache/commons/text/diff/StringsComparator$Snake::<init> (size: 12, lines: 4, complexity: 1)".postln;
~class.(12, 4, 1);
"org/apache/commons/text/diff/StringsComparator::<init> (size: 25, lines: 7, complexity: 1)".postln;
~class.(25, 7, 1);
"org/apache/commons/text/diff/StringsComparator::getScript (size: 17, lines: 2, complexity: 1)".postln;
~class.(17, 2, 1);
"org/apache/commons/text/diff/StringsComparator::buildScript (size: 143, lines: 36, complexity: 13)".postln;
~class.(143, 36, 13);
"org/apache/commons/text/diff/StringsComparator::getMiddleSnake (size: 331, lines: 67, complexity: 30)".postln;
~class.(331, 67, 30);
"org/apache/commons/text/diff/StringsComparator::buildSnake (size: 30, lines: 6, complexity: 4)".postln;
~class.(30, 6, 4);
"org/apache/commons/text/io/StringSubstitutorReader::<init> (size: 32, lines: 4, complexity: 1)".postln;
~class.(32, 4, 1);
"org/apache/commons/text/io/StringSubstitutorReader::buffer (size: 17, lines: 2, complexity: 2)".postln;
~class.(17, 2, 2);
"org/apache/commons/text/io/StringSubstitutorReader::bufferOrDrainOnEos (size: 11, lines: 1, complexity: 1)".postln;
~class.(11, 1, 1);
"org/apache/commons/text/io/StringSubstitutorReader::drain (size: 32, lines: 7, complexity: 3)".postln;
~class.(32, 7, 3);
"org/apache/commons/text/io/StringSubstitutorReader::drainOnEos (size: 22, lines: 8, complexity: 5)".postln;
~class.(22, 8, 5);
"org/apache/commons/text/io/StringSubstitutorReader::read (size: 22, lines: 9, complexity: 4)".postln;
~class.(22, 9, 4);
"org/apache/commons/text/io/StringSubstitutorReader::read (size: 363, lines: 121, complexity: 37)".postln;
~class.(363, 121, 37);
"org/apache/commons/text/io/StringSubstitutorReader::readCount (size: 15, lines: 1, complexity: 2)".postln;
~class.(15, 1, 2);
"org/apache/commons/text/lookup/BiFunctionStringLookup::<init> (size: 6, lines: 2, complexity: 1)".postln;
~class.(6, 2, 1);
"org/apache/commons/text/lookup/BiFunctionStringLookup::lookup (size: 20, lines: 11, complexity: 4)".postln;
~class.(20, 11, 4);
"org/apache/commons/text/lookup/ConstantStringLookup::clear (size: 3, lines: 1, complexity: 1)".postln;
~class.(3, 1, 1);
"org/apache/commons/text/lookup/ConstantStringLookup::lookup (size: 52, lines: 23, complexity: 9)".postln;
~class.(52, 23, 9);
"org/apache/commons/text/lookup/ConstantStringLookup::resolveField (size: 14, lines: 4, complexity: 3)".postln;
~class.(14, 4, 3);
"org/apache/commons/text/lookup/ConstantStringLookup::<clinit> (size: 9, lines: 8, complexity: 1)".postln;
~class.(9, 8, 1);
"org/apache/commons/text/lookup/DateStringLookup::<init> (size: 3, lines: 2, complexity: 1)".postln;
~class.(3, 2, 1);
"org/apache/commons/text/lookup/DateStringLookup::formatDate (size: 30, lines: 11, complexity: 4)".postln;
~class.(30, 11, 4);
"org/apache/commons/text/lookup/DefaultStringLookup::<init> (size: 11, lines: 3, complexity: 1)".postln;
~class.(11, 3, 1);
"org/apache/commons/text/lookup/DnsStringLookup::<init> (size: 3, lines: 2, complexity: 1)".postln;
~class.(3, 2, 1);
"org/apache/commons/text/lookup/DnsStringLookup::lookup (size: 74, lines: 20, complexity: 17)".postln;
~class.(74, 20, 17);
"org/apache/commons/text/lookup/FileStringLookup::<init> (size: 3, lines: 2, complexity: 1)".postln;
~class.(3, 2, 1);
"org/apache/commons/text/lookup/FileStringLookup::lookup (size: 57, lines: 14, complexity: 6)".postln;
~class.(57, 14, 6);
"org/apache/commons/text/lookup/FunctionStringLookup::<init> (size: 6, lines: 2, complexity: 1)".postln;
~class.(6, 2, 1);
"org/apache/commons/text/lookup/FunctionStringLookup::lookup (size: 19, lines: 11, complexity: 4)".postln;
~class.(19, 11, 4);
"org/apache/commons/text/lookup/IllegalArgumentExceptions::<init> (size: 3, lines: 2, complexity: 1)".postln;
~class.(3, 2, 1);
"org/apache/commons/text/lookup/InetAddressKeys::<init> (size: 3, lines: 2, complexity: 1)".postln;
~class.(3, 2, 1);
"org/apache/commons/text/lookup/InterpolatorStringLookup::<init> (size: 5, lines: 1, complexity: 1)".postln;
~class.(5, 1, 1);
"org/apache/commons/text/lookup/InterpolatorStringLookup::<init> (size: 49, lines: 9, complexity: 3)".postln;
~class.(49, 9, 3);
"org/apache/commons/text/lookup/InterpolatorStringLookup::<init> (size: 12, lines: 1, complexity: 2)".postln;
~class.(12, 1, 2);
"org/apache/commons/text/lookup/InterpolatorStringLookup::<init> (size: 8, lines: 1, complexity: 1)".postln;
~class.(8, 1, 1);
"org/apache/commons/text/lookup/InterpolatorStringLookup::lookup (size: 59, lines: 22, complexity: 9)".postln;
~class.(59, 22, 9);
"org/apache/commons/text/lookup/JavaPlatformStringLookup::main (size: 100, lines: 7, complexity: 1)".postln;
~class.(100, 7, 1);
"org/apache/commons/text/lookup/JavaPlatformStringLookup::<init> (size: 3, lines: 2, complexity: 1)".postln;
~class.(3, 2, 1);
"org/apache/commons/text/lookup/JavaPlatformStringLookup::getSystemProperty (size: 18, lines: 4, complexity: 3)".postln;
~class.(18, 4, 3);
"org/apache/commons/text/lookup/JavaPlatformStringLookup::lookup (size: 85, lines: 17, complexity: 27)".postln;
~class.(85, 17, 27);
"org/apache/commons/text/lookup/LocalHostStringLookup::<init> (size: 3, lines: 2, complexity: 1)".postln;
~class.(3, 2, 1);
"org/apache/commons/text/lookup/LocalHostStringLookup::lookup (size: 50, lines: 15, complexity: 16)".postln;
~class.(50, 15, 16);
"org/apache/commons/text/lookup/PropertiesStringLookup::<init> (size: 3, lines: 2, complexity: 1)".postln;
~class.(3, 2, 1);
"org/apache/commons/text/lookup/PropertiesStringLookup::lookup (size: 110, lines: 18, complexity: 12)".postln;
~class.(110, 18, 12);
"org/apache/commons/text/lookup/ResourceBundleStringLookup::<init> (size: 4, lines: 1, complexity: 1)".postln;
~class.(4, 1, 1);
"org/apache/commons/text/lookup/ResourceBundleStringLookup::<init> (size: 6, lines: 2, complexity: 1)".postln;
~class.(6, 2, 1);
"org/apache/commons/text/lookup/ResourceBundleStringLookup::lookup (size: 89, lines: 22, complexity: 14)".postln;
~class.(89, 22, 14);
"org/apache/commons/text/lookup/ScriptStringLookup::<init> (size: 3, lines: 2, complexity: 1)".postln;
~class.(3, 2, 1);
"org/apache/commons/text/lookup/ScriptStringLookup::lookup (size: 74, lines: 18, complexity: 8)".postln;
~class.(74, 18, 8);
"org/apache/commons/text/lookup/StringLookupFactory::clear (size: 2, lines: 1, complexity: 1)".postln;
~class.(2, 1, 1);
"org/apache/commons/text/lookup/StringLookupFactory::<init> (size: 3, lines: 2, complexity: 1)".postln;
~class.(3, 2, 1);
"org/apache/commons/text/lookup/StringLookupFactory::addDefaultStringLookups (size: 34, lines: 8, complexity: 3)".postln;
~class.(34, 8, 3);
"org/apache/commons/text/lookup/StringLookupFactory::<clinit> (size: 30, lines: 80, complexity: 1)".postln;
~class.(30, 80, 1);
"org/apache/commons/text/lookup/UrlDecoderStringLookup::<init> (size: 3, lines: 2, complexity: 1)".postln;
~class.(3, 2, 1);
"org/apache/commons/text/lookup/UrlDecoderStringLookup::lookup (size: 31, lines: 8, complexity: 4)".postln;
~class.(31, 8, 4);
"org/apache/commons/text/lookup/UrlEncoderStringLookup::<init> (size: 3, lines: 2, complexity: 1)".postln;
~class.(3, 2, 1);
"org/apache/commons/text/lookup/UrlEncoderStringLookup::lookup (size: 31, lines: 8, complexity: 4)".postln;
~class.(31, 8, 4);
"org/apache/commons/text/lookup/UrlStringLookup::<init> (size: 3, lines: 2, complexity: 1)".postln;
~class.(3, 2, 1);
"org/apache/commons/text/lookup/UrlStringLookup::lookup (size: 167, lines: 25, complexity: 19)".postln;
~class.(167, 25, 19);
"org/apache/commons/text/lookup/XmlStringLookup::<init> (size: 3, lines: 2, complexity: 1)".postln;
~class.(3, 2, 1);
"org/apache/commons/text/lookup/XmlStringLookup::lookup (size: 104, lines: 14, complexity: 12)".postln;
~class.(104, 14, 12);
"org/apache/commons/text/matcher/AbstractStringMatcher$AndStringMatcher::<init> (size: 8, lines: 2, complexity: 1)".postln;
~class.(8, 2, 1);
"org/apache/commons/text/matcher/AbstractStringMatcher$AndStringMatcher::isMatch (size: 45, lines: 12, complexity: 5)".postln;
~class.(45, 12, 5);
"org/apache/commons/text/matcher/AbstractStringMatcher$AndStringMatcher::isMatch (size: 45, lines: 12, complexity: 5)".postln;
~class.(45, 12, 5);
"org/apache/commons/text/matcher/AbstractStringMatcher$AndStringMatcher::size (size: 29, lines: 6, complexity: 3)".postln;
~class.(29, 6, 3);
"org/apache/commons/text/matcher/AbstractStringMatcher$CharArrayMatcher::<init> (size: 12, lines: 3, complexity: 1)".postln;
~class.(12, 3, 1);
"org/apache/commons/text/matcher/AbstractStringMatcher$CharArrayMatcher::isMatch (size: 32, lines: 10, complexity: 6)".postln;
~class.(32, 10, 6);
"org/apache/commons/text/matcher/AbstractStringMatcher$CharArrayMatcher::isMatch (size: 33, lines: 10, complexity: 6)".postln;
~class.(33, 10, 6);
"org/apache/commons/text/matcher/AbstractStringMatcher$CharMatcher::<init> (size: 6, lines: 2, complexity: 1)".postln;
~class.(6, 2, 1);
"org/apache/commons/text/matcher/AbstractStringMatcher$CharSetMatcher::<init> (size: 11, lines: 3, complexity: 1)".postln;
~class.(11, 3, 1);
"org/apache/commons/text/matcher/AbstractStringMatcher$NoneMatcher::<init> (size: 3, lines: 1, complexity: 1)".postln;
~class.(3, 1, 1);
"org/apache/commons/text/matcher/AbstractStringMatcher$TrimMatcher::<init> (size: 3, lines: 1, complexity: 1)".postln;
~class.(3, 1, 1);
"org/apache/commons/text/matcher/AbstractStringMatcher::<init> (size: 3, lines: 1, complexity: 1)".postln;
~class.(3, 1, 1);
"org/apache/commons/text/matcher/StringMatcherFactory::<init> (size: 3, lines: 2, complexity: 1)".postln;
~class.(3, 2, 1);
"org/apache/commons/text/matcher/StringMatcherFactory::andMatcher (size: 19, lines: 7, complexity: 5)".postln;
~class.(19, 7, 5);
"org/apache/commons/text/matcher/StringMatcherFactory::charSetMatcher (size: 22, lines: 7, complexity: 5)".postln;
~class.(22, 7, 5);
"org/apache/commons/text/matcher/StringMatcherFactory::charSetMatcher (size: 23, lines: 7, complexity: 5)".postln;
~class.(23, 7, 5);
"org/apache/commons/text/matcher/StringMatcherFactory::stringMatcher (size: 22, lines: 1, complexity: 3)".postln;
~class.(22, 1, 3);
"org/apache/commons/text/matcher/StringMatcherFactory::<clinit> (size: 50, lines: 49, complexity: 1)".postln;
~class.(50, 49, 1);
"org/apache/commons/text/similarity/CosineDistance::<init> (size: 13, lines: 8, complexity: 1)".postln;
~class.(13, 8, 1);
"org/apache/commons/text/similarity/CosineDistance::apply (size: 32, lines: 6, complexity: 1)".postln;
~class.(32, 6, 1);
"org/apache/commons/text/similarity/CosineSimilarity::cosineSimilarity (size: 94, lines: 21, complexity: 8)".postln;
~class.(94, 21, 8);
"org/apache/commons/text/similarity/CosineSimilarity::getIntersection (size: 16, lines: 2, complexity: 1)".postln;
~class.(16, 2, 1);
"org/apache/commons/text/similarity/CosineSimilarity::dot (size: 37, lines: 4, complexity: 2)".postln;
~class.(37, 4, 2);
"org/apache/commons/text/similarity/Counter::<init> (size: 3, lines: 1, complexity: 1)".postln;
~class.(3, 1, 1);
"org/apache/commons/text/similarity/Counter::of (size: 50, lines: 9, complexity: 3)".postln;
~class.(50, 9, 3);
"org/apache/commons/text/similarity/EditDistanceFrom::<init> (size: 18, lines: 5, complexity: 2)".postln;
~class.(18, 5, 2);
"org/apache/commons/text/similarity/FuzzyScore::<init> (size: 13, lines: 5, complexity: 3)".postln;
~class.(13, 5, 3);
"org/apache/commons/text/similarity/FuzzyScore::fuzzyScore (size: 72, lines: 48, complexity: 9)".postln;
~class.(72, 48, 9);
"org/apache/commons/text/similarity/HammingDistance::apply (size: 45, lines: 16, complexity: 8)".postln;
~class.(45, 16, 8);
"org/apache/commons/text/similarity/IntersectionResult::<init> (size: 59, lines: 13, complexity: 8)".postln;
~class.(59, 13, 8);
"org/apache/commons/text/similarity/IntersectionResult::equals (size: 36, lines: 7, complexity: 9)".postln;
~class.(36, 7, 9);
"org/apache/commons/text/similarity/IntersectionSimilarity$BagCount::<init> (size: 6, lines: 2, complexity: 1)".postln;
~class.(6, 2, 1);
"org/apache/commons/text/similarity/IntersectionSimilarity$TinyBag::<init> (size: 12, lines: 2, complexity: 1)".postln;
~class.(12, 2, 1);
"org/apache/commons/text/similarity/IntersectionSimilarity$TinyBag::add (size: 27, lines: 6, complexity: 2)".postln;
~class.(27, 6, 2);
"org/apache/commons/text/similarity/IntersectionSimilarity$TinyBag::getCount (size: 14, lines: 4, complexity: 3)".postln;
~class.(14, 4, 3);
"org/apache/commons/text/similarity/IntersectionSimilarity::<init> (size: 13, lines: 5, complexity: 3)".postln;
~class.(13, 5, 3);
"org/apache/commons/text/similarity/IntersectionSimilarity::apply (size: 94, lines: 34, complexity: 10)".postln;
~class.(94, 34, 10);
"org/apache/commons/text/similarity/IntersectionSimilarity::toBag (size: 26, lines: 4, complexity: 2)".postln;
~class.(26, 4, 2);
"org/apache/commons/text/similarity/IntersectionSimilarity::getIntersection (size: 23, lines: 6, complexity: 3)".postln;
~class.(23, 6, 3);
"org/apache/commons/text/similarity/IntersectionSimilarity::getIntersection (size: 37, lines: 7, complexity: 2)".postln;
~class.(37, 7, 2);
"org/apache/commons/text/similarity/JaccardDistance::<init> (size: 8, lines: 5, complexity: 1)".postln;
~class.(8, 5, 1);
"org/apache/commons/text/similarity/JaccardDistance::apply (size: 19, lines: 3, complexity: 4)".postln;
~class.(19, 3, 4);
"org/apache/commons/text/similarity/JaccardSimilarity::apply (size: 14, lines: 3, complexity: 4)".postln;
~class.(14, 3, 4);
"org/apache/commons/text/similarity/JaccardSimilarity::calculateJaccardSimilarity (size: 88, lines: 16, complexity: 6)".postln;
~class.(88, 16, 6);
"org/apache/commons/text/similarity/JaroWinklerDistance::apply (size: 76, lines: 17, complexity: 7)".postln;
~class.(76, 17, 7);
"org/apache/commons/text/similarity/JaroWinklerDistance::matches (size: 205, lines: 51, complexity: 14)".postln;
~class.(205, 51, 14);
"org/apache/commons/text/similarity/JaroWinklerSimilarity::apply (size: 83, lines: 17, complexity: 9)".postln;
~class.(83, 17, 9);
"org/apache/commons/text/similarity/JaroWinklerSimilarity::matches (size: 205, lines: 51, complexity: 14)".postln;
~class.(205, 51, 14);
"org/apache/commons/text/similarity/LevenshteinDetailedDistance::<init> (size: 4, lines: 1, complexity: 1)".postln;
~class.(4, 1, 1);
"org/apache/commons/text/similarity/LevenshteinDetailedDistance::<init> (size: 16, lines: 5, complexity: 4)".postln;
~class.(16, 5, 4);
"org/apache/commons/text/similarity/LevenshteinDetailedDistance::apply (size: 14, lines: 3, complexity: 3)".postln;
~class.(14, 3, 3);
"org/apache/commons/text/similarity/LevenshteinDetailedDistance::limitedCompare (size: 313, lines: 143, complexity: 25)".postln;
~class.(313, 143, 25);
"org/apache/commons/text/similarity/LevenshteinDetailedDistance::unlimitedCompare (size: 200, lines: 81, complexity: 15)".postln;
~class.(200, 81, 15);
"org/apache/commons/text/similarity/LevenshteinDetailedDistance::findDetailedResults (size: 192, lines: 76, complexity: 27)".postln;
~class.(192, 76, 27);
"org/apache/commons/text/similarity/LevenshteinDistance::<init> (size: 4, lines: 1, complexity: 1)".postln;
~class.(4, 1, 1);
"org/apache/commons/text/similarity/LevenshteinDistance::<init> (size: 16, lines: 5, complexity: 4)".postln;
~class.(16, 5, 4);
"org/apache/commons/text/similarity/LevenshteinDistance::apply (size: 16, lines: 3, complexity: 3)".postln;
~class.(16, 3, 3);
"org/apache/commons/text/similarity/LevenshteinDistance::limitedCompare (size: 207, lines: 135, complexity: 23)".postln;
~class.(207, 135, 23);
"org/apache/commons/text/similarity/LevenshteinDistance::unlimitedCompare (size: 127, lines: 56, complexity: 13)".postln;
~class.(127, 56, 13);
"org/apache/commons/text/similarity/LevenshteinResults::<init> (size: 15, lines: 5, complexity: 1)".postln;
~class.(15, 5, 1);
"org/apache/commons/text/similarity/LevenshteinResults::equals (size: 45, lines: 7, complexity: 10)".postln;
~class.(45, 7, 10);
"org/apache/commons/text/similarity/LongestCommonSubsequence::apply (size: 17, lines: 3, complexity: 4)".postln;
~class.(17, 3, 4);
"org/apache/commons/text/similarity/LongestCommonSubsequence::longestCommonSubsequence (size: 109, lines: 20, complexity: 7)".postln;
~class.(109, 20, 7);
"org/apache/commons/text/similarity/LongestCommonSubsequence::longestCommonSubstringLengthArray (size: 98, lines: 16, complexity: 6)".postln;
~class.(98, 16, 6);
"org/apache/commons/text/similarity/LongestCommonSubsequenceDistance::<init> (size: 8, lines: 5, complexity: 1)".postln;
~class.(8, 5, 1);
"org/apache/commons/text/similarity/LongestCommonSubsequenceDistance::apply (size: 27, lines: 3, complexity: 4)".postln;
~class.(27, 3, 4);
"org/apache/commons/text/similarity/RegexTokenizer::tokenize (size: 32, lines: 6, complexity: 2)".postln;
~class.(32, 6, 2);
"org/apache/commons/text/similarity/SimilarityScoreFrom::<init> (size: 18, lines: 5, complexity: 2)".postln;
~class.(18, 5, 2);
"org/apache/commons/text/translate/AggregateTranslator::<init> (size: 34, lines: 8, complexity: 4)".postln;
~class.(34, 8, 4);
"org/apache/commons/text/translate/AggregateTranslator::translate (size: 27, lines: 6, complexity: 4)".postln;
~class.(27, 6, 4);
"org/apache/commons/text/translate/CharSequenceTranslator::translate (size: 26, lines: 9, complexity: 4)".postln;
~class.(26, 9, 4);
"org/apache/commons/text/translate/CharSequenceTranslator::translate (size: 73, lines: 29, complexity: 10)".postln;
~class.(73, 29, 10);
"org/apache/commons/text/translate/CharSequenceTranslator::with (size: 22, lines: 3, complexity: 1)".postln;
~class.(22, 3, 1);
"org/apache/commons/text/translate/CodePointTranslator::translate (size: 15, lines: 2, complexity: 2)".postln;
~class.(15, 2, 2);
"org/apache/commons/text/translate/CsvTranslators$CsvEscaper::translateWhole (size: 25, lines: 9, complexity: 2)".postln;
~class.(25, 9, 2);
"org/apache/commons/text/translate/CsvTranslators$CsvUnescaper::translateWhole (size: 49, lines: 14, complexity: 5)".postln;
~class.(49, 14, 5);
"org/apache/commons/text/translate/CsvTranslators::<clinit> (size: 32, lines: 4, complexity: 1)".postln;
~class.(32, 4, 1);
"org/apache/commons/text/translate/EntityArrays::invert (size: 32, lines: 4, complexity: 2)".postln;
~class.(32, 4, 2);
"org/apache/commons/text/translate/EntityArrays::<clinit> (size: 1604, lines: 388, complexity: 1)".postln;
~class.(1604, 388, 1);
"org/apache/commons/text/translate/JavaUnicodeEscaper::<init> (size: 6, lines: 1, complexity: 1)".postln;
~class.(6, 1, 1);
"org/apache/commons/text/translate/JavaUnicodeEscaper::toUtf16Escape (size: 22, lines: 1, complexity: 1)".postln;
~class.(22, 1, 1);
"org/apache/commons/text/translate/LookupTranslator::<init> (size: 90, lines: 22, complexity: 6)".postln;
~class.(90, 22, 6);
"org/apache/commons/text/translate/LookupTranslator::translate (size: 59, lines: 16, complexity: 6)".postln;
~class.(59, 16, 6);
"org/apache/commons/text/translate/NumericEntityEscaper::<init> (size: 13, lines: 3, complexity: 1)".postln;
~class.(13, 3, 1);
"org/apache/commons/text/translate/NumericEntityEscaper::<init> (size: 6, lines: 1, complexity: 1)".postln;
~class.(6, 1, 1);
"org/apache/commons/text/translate/NumericEntityEscaper::translate (size: 23, lines: 6, complexity: 3)".postln;
~class.(23, 6, 3);
"org/apache/commons/text/translate/NumericEntityUnescaper::<init> (size: 22, lines: 6, complexity: 2)".postln;
~class.(22, 6, 2);
"org/apache/commons/text/translate/NumericEntityUnescaper::translate (size: 188, lines: 57, complexity: 28)".postln;
~class.(188, 57, 28);
"org/apache/commons/text/translate/OctalUnescaper::translate (size: 102, lines: 20, complexity: 10)".postln;
~class.(102, 20, 10);
"org/apache/commons/text/translate/SinglePassTranslator::translate (size: 26, lines: 7, complexity: 3)".postln;
~class.(26, 7, 3);
"org/apache/commons/text/translate/SinglePassTranslator::getClassName (size: 12, lines: 1, complexity: 2)".postln;
~class.(12, 1, 2);
"org/apache/commons/text/translate/UnicodeEscaper::<init> (size: 6, lines: 1, complexity: 1)".postln;
~class.(6, 1, 1);
"org/apache/commons/text/translate/UnicodeEscaper::<init> (size: 12, lines: 4, complexity: 1)".postln;
~class.(12, 4, 1);
"org/apache/commons/text/translate/UnicodeEscaper::translate (size: 71, lines: 19, complexity: 9)".postln;
~class.(71, 19, 9);
"org/apache/commons/text/translate/UnicodeUnescaper::translate (size: 128, lines: 27, complexity: 12)".postln;
~class.(128, 27, 12);
"org/apache/commons/text/translate/UnicodeUnpairedSurrogateRemover::translate (size: 10, lines: 5, complexity: 4)".postln;
~class.(10, 5, 4);


		6.wait;
	CmdPeriod.run;
});
)

~r.reset.play;